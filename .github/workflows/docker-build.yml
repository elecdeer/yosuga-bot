name: Build and Publish Docker on Push

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: yosuga-bot

jobs:
  build_and_push_images:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: write imageenv file
        shell: bash
        run: |
          cat << EOS > imageenv.json
          {
            "commitId": "${{github.sha}}",
            "ref": "${{github.ref}}",
            "imageName": "${{ env.IMAGE_NAME }}",
            "trigger": "master"
          }
      #          echo -e "COMMIT_ID=${{ github.sha }}\n" > .imageenv
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long,prefix=,suffix=-${{ matrix.arch }}
          flavor: latest=true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}

  push_manifest:
    needs: build_and_push_images
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Create and push manifest
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          IMAGE=${IMAGE,,}
          BASE_TAG=${{ github.sha }}

          echo "Creating manifest list for ${IMAGE}:${TAG}"

          DIGEST_AMD64=$(docker buildx imagetools inspect ${IMAGE}:${BASE_TAG}-amd64 --raw | jq -r '.manifests[] | select(.platform.architecture == "amd64") | .digest')
          DIGEST_ARM64=$(docker buildx imagetools inspect ${IMAGE}:${BASE_TAG}-arm64 --raw | jq -r '.manifests[] | select(.platform.architecture == "arm64") | .digest')
          echo "Digest for amd64: ${DIGEST_AMD64}"
          echo "Digest for arm64: ${DIGEST_ARM64}"

          echo "Creating manifest list for ${IMAGE}:${{ github.sha }}"
          docker manifest create ${IMAGE}:${BASE_TAG} \
            --amend ${IMAGE}@${DIGEST_AMD64} \
            --amend ${IMAGE}@${DIGEST_ARM64}

          docker manifest annotate ${IMAGE}:${BASE_TAG} ${IMAGE}@${DIGEST_AMD64} --os linux --arch amd64
          docker manifest annotate ${IMAGE}:${BASE_TAG} ${IMAGE}@${DIGEST_ARM64} --os linux --arch arm64 --variant v8

          docker manifest push ${IMAGE}:${BASE_TAG}
          docker manifest inspect ${IMAGE}:${BASE_TAG}
